pruebas

// if else
int i;

main: 

i = 3;

if(i > 4):
print("yes");
end_if
else:
print("nel");
end_else

if(3 > 1):
print("otro");
end_if

print("Hello, world");


// while

int i;
int j;

main: 

i = 1;
j = 3;

while(i < j):
print (i);
i = i+1;
end_while

print("Hello, world");

// if while else
int i;
int j;

main: 

i = 1;
j = 4;

if(i == 2):
print ("I'm in");

while(i < j):
i = i+1;
print (i);
end_while
print("outta while");

end_if
else:
print("Never in");
end_else

print("Hello, world");




// FACTORIAL ITERATIVO

int a,res;

def int factorial(int n):
int r;

r = 1;

while(n > 0):
r = n * r;
n = n - 1;
end_while
return r;
end_def


main:
a = 5;
res = factorial(a);
print(res);






// FIBONACCI ITERATIVO
int a,b,res,itera;
def int fibo(int num1, int num2, int max):
	int cont,num3;
	cont = 1;
	num3 = 0;
	while (cont <= max):
		num1 = num2;
		num2 = num3;
		num3 = num1 + num2;
		cont = cont + 1;
	end_while
	return num3;
end_def
main: 

a = 1;
b = 1;
itera = 10;
res = fibo(a,b,itera);
print(res);





// FACTORIAL RECURSIVO

int a,res;
def int factorial(int n):
	int r,g;
	if(n == 1):
		return 1;
	end_if
	else:
		g = factorial(n-1);
		r = g * n;
		return r;
	end_else
end_def
main:
a = 5;
res = factorial(a);
print(res);





// FIBONACCI RECURSIVO
int res;

def int fibonacci(int n):
int p1, p2, respuesta;
respuesta = n;
p1 = 0;
p2 = 0;

if(n < 2):
return n;
end_if
else:
p1 = fibonacci(n-1);
p2 = fibonacci(n-2);
respuesta = p1 + p2;
return respuesta;
end_else
end_def

main:

res = 0;
res = fibonacci(7);
print(res);






//	ARREGLOS

int a[10];
int b,c,d;
main:
b = 0;
while(b < 10):
a[b] = b;
b = b + 1;
end_while
b = 0;
c = 0;
d = 0;
while(b < 10):
d = a[b];
if(a[b] == 5):
 c = b;
end_if
b = b + 1;
end_while
print(c+1);
print(d);
// 
///

int a[10];
int b, c, d;

main:

b = 0;
c = 1;
d = 0;

while(b < 10):
a[b] = c;
print(a[b]);
b = b + 1;
c = c + 2;
end_while

b = 0;

while(b < 10):
if(a[b] == 6):
 c = b;
end_if
b = b + 1;
end_while

print(c);



////////////////

int a[6];
int e[6];
int b, c, d, aux;
main:
b = 0;
c = 0;
d = 0;
aux = 0;

while(b < 6):
a[b] = c * 3;
print(a[b]);
b = b + 1;
c = c + 2;
end_while

c = 0;
b = b - 1;

print ("Sorted arreglo:");

while(d < 6):

aux = a[b];
e[d] = aux;

print(e[d]);

d = d + 1;
b = b - 1;
end_while



////////FIND ARREGLOS
int a[10];
int b,c,d;
def int Find(int valor,int tam):
int i,j;
i = 0;
while(i < tam):
  if(a[i] == valor):
     return i + 1;
  end_if
  i = i + 1;
  return 0;
end_while
end_def

main:
a[0] = 9;
a[1] = 9;
a[2] = 3;
a[3] = 4;
a[4] = 90;
a[5] = 90;
a[6] = 70;
a[7] = 90;
a[8] = 100;
a[9] = 5;
b = 100;
c = 10;
d = Find(b,c);
print(d);


/////sort

int a[10];
int f;
def void sort():
	int i,j,temp;
	i = 0;
	temp = 0;
	while(i < 10):
		j = 0;
		while(j < (9- i)):
			if(a[j] > a[j+1]):
				temp = a[j];
				a[j] = a[j+1];
				a[j+1] = temp;
			end_if
			j = j + 1;
		end_while
		i = i + 1;
	end_while
end_def
main:
f = 0;
a[0] = 5;
a[1] = 9;
a[2] = 6;
a[3] = 4;
a[4] = 1;
a[5] = 8;
a[6] = 7;
a[7] = 2;
a[8] = 3;
a[9] = 10;
sort();
while(f < 10):
	print(a[f]);
	f = f + 1;
end_while